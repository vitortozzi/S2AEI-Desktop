/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ProjetoController;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Vítor
 */
public class ProjetosAdministrador extends javax.swing.JFrame {

    ProjetoController projControler;
    
    /**
     * Creates new form ProjetosAdministrador
     */
    public ProjetosAdministrador() {
        initComponents();
        projControler = new ProjetoController();
        tabelaProjetosAdmin = projControler.updateTable(tabelaProjetosAdmin);
        
        // Esconde a coluna com os IDs.
        tabelaProjetosAdmin.removeColumn(tabelaProjetosAdmin.getColumnModel().getColumn(0));
        
        // Para utilização mais tarde
        //System.out.println("Id: " + tabelaProjetosAdmin.getModel().getValueAt(0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projetosAdminContentPanel = new javax.swing.JPanel();
        projetosAdminIndex = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProjetosAdmin = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        attrAvaliadores = new javax.swing.JPanel();
        projetosAdminMenuPanel = new javax.swing.JPanel();
        bttnAttrAvaliadores = new javax.swing.JButton();
        bttnFinalProjeto = new javax.swing.JButton();
        bttnAcompProjeto = new javax.swing.JButton();
        bttnVoltarProjetosAdmin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(693, 440));

        projetosAdminContentPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        projetosAdminContentPanel.setLayout(new java.awt.CardLayout());

        tabelaProjetosAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Título", "Líder", "Orientador", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProjetosAdmin);
        if (tabelaProjetosAdmin.getColumnModel().getColumnCount() > 0) {
            tabelaProjetosAdmin.getColumnModel().getColumn(0).setResizable(false);
            tabelaProjetosAdmin.getColumnModel().getColumn(1).setResizable(false);
            tabelaProjetosAdmin.getColumnModel().getColumn(2).setResizable(false);
            tabelaProjetosAdmin.getColumnModel().getColumn(3).setResizable(false);
            tabelaProjetosAdmin.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Lista de Projetos");

        javax.swing.GroupLayout projetosAdminIndexLayout = new javax.swing.GroupLayout(projetosAdminIndex);
        projetosAdminIndex.setLayout(projetosAdminIndexLayout);
        projetosAdminIndexLayout.setHorizontalGroup(
            projetosAdminIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projetosAdminIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projetosAdminIndexLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(238, 238, 238))
        );
        projetosAdminIndexLayout.setVerticalGroup(
            projetosAdminIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projetosAdminIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        projetosAdminContentPanel.add(projetosAdminIndex, "professorIndex");

        javax.swing.GroupLayout attrAvaliadoresLayout = new javax.swing.GroupLayout(attrAvaliadores);
        attrAvaliadores.setLayout(attrAvaliadoresLayout);
        attrAvaliadoresLayout.setHorizontalGroup(
            attrAvaliadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        attrAvaliadoresLayout.setVerticalGroup(
            attrAvaliadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 331, Short.MAX_VALUE)
        );

        projetosAdminContentPanel.add(attrAvaliadores, "card3");

        projetosAdminMenuPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bttnAttrAvaliadores.setText("Atribuir Avaliadores");
        bttnAttrAvaliadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAttrAvaliadoresActionPerformed(evt);
            }
        });

        bttnFinalProjeto.setText("Finalizar Projeto");
        bttnFinalProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnFinalProjetoActionPerformed(evt);
            }
        });

        bttnAcompProjeto.setText("Acompanhar Projeto");
        bttnAcompProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAcompProjetoActionPerformed(evt);
            }
        });

        bttnVoltarProjetosAdmin.setText("Voltar");
        bttnVoltarProjetosAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnVoltarProjetosAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout projetosAdminMenuPanelLayout = new javax.swing.GroupLayout(projetosAdminMenuPanel);
        projetosAdminMenuPanel.setLayout(projetosAdminMenuPanelLayout);
        projetosAdminMenuPanelLayout.setHorizontalGroup(
            projetosAdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projetosAdminMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bttnAttrAvaliadores, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttnFinalProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttnAcompProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttnVoltarProjetosAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        projetosAdminMenuPanelLayout.setVerticalGroup(
            projetosAdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projetosAdminMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(projetosAdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bttnAttrAvaliadores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(bttnFinalProjeto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttnAcompProjeto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttnVoltarProjetosAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(projetosAdminMenuPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projetosAdminContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projetosAdminContentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projetosAdminMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnAttrAvaliadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAttrAvaliadoresActionPerformed
//        CardLayout content = (CardLayout) (projetosAdminContentPanel.getLayout());
//        content.show(projetosAdminContentPanel, "professorAdd");
    }//GEN-LAST:event_bttnAttrAvaliadoresActionPerformed

    private void bttnFinalProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnFinalProjetoActionPerformed

//        int rowIndex = tabelaProjetosAdmin.getSelectedRow();
//
//        if (rowIndex == -1) {
//            JOptionPane.showMessageDialog(null,"Escolha um Professor da tabela para editar.", "Aviso", JOptionPane.WARNING_MESSAGE);
//        } else {
//
//            CardLayout content = (CardLayout) (projetosAdminContentPanel.getLayout());
//            content.show(projetosAdminContentPanel, "professorEdit");
//
//            String emailProfSelecionado = (String) tabelaProjetosAdmin.getModel().getValueAt(rowIndex, 1);
//            Professor p;
//            profController = new ProfessorController();
//
//            p = profController.getProfessorByEmail(emailProfSelecionado);
//
//            profNomeEdit.setText(p.getNome());
//            profEmailEdit.setText(p.getEmail());
//            profSenhaEdit.setText(p.getSenha());
//            profStatusEdit.setSelectedItem(p.getStatus());
//            profDepartEdit.setText(p.getDepartamento());
//            profDiscEdit.setText(p.getDisciplinaPrincipal());
        //}
    }//GEN-LAST:event_bttnFinalProjetoActionPerformed

    private void bttnAcompProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAcompProjetoActionPerformed
//        CardLayout content = (CardLayout) (projetosAdminContentPanel.getLayout());
//        content.show(projetosAdminContentPanel, "professorDelete");
//
//        int rowIndex = tabelaProjetosAdmin.getSelectedRow();
//
//        if (rowIndex == -1) {
//            JOptionPane.showMessageDialog(null,"Escolha um Professor da tabela para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
//        } else {
//
//            String message = "";
//            String emailProfSelec = (String) tabelaProjetosAdmin.getModel().getValueAt(rowIndex, 1);
//            String nomeProfSelec = (String) tabelaProjetosAdmin.getModel().getValueAt(rowIndex, 0);
//            String departamentoProfSelec = (String) tabelaProjetosAdmin.getModel().getValueAt(rowIndex, 3);
//            String discPrincipalProfSelec = (String) tabelaProjetosAdmin.getModel().getValueAt(rowIndex, 4);
//
//            String temp = "Deseja excluir o seguinte Professor:\n";
//            temp += "\n\t\tNome: " + nomeProfSelec;
//            temp += "\n\t\tEmail: " + emailProfSelec;
//            temp += "\n\t\tDepartamento: " + departamentoProfSelec;
//            temp += "\n\t\tDisciplina principal: " + discPrincipalProfSelec;
//            temp += "\n\nA exclusão do Professor o tornará 'Inativo', incapacitando-o de orientar de projetos";
//
//            int escolha = JOptionPane.showConfirmDialog(null, temp, "Confirmar exclusão?", JOptionPane.OK_CANCEL_OPTION, 0, null);

//            if (escolha == JOptionPane.OK_OPTION) {
//
//                profController = new ProfessorController();
//                message = profController.delProfessor(emailProfSelec);
//
//                JOptionPane.showMessageDialog(null, message);
//
//                // atualizar tabela
//                profController = new ProfessorController();
//                tabelaProjetosAdmin = profController.updateTable(tabelaProjetosAdmin);
//            }
       // }
    }//GEN-LAST:event_bttnAcompProjetoActionPerformed

    private void bttnVoltarProjetosAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnVoltarProjetosAdminActionPerformed
        dispose();
        new HomeAdministrador().setVisible(true);
    }//GEN-LAST:event_bttnVoltarProjetosAdminActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjetosAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjetosAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjetosAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjetosAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjetosAdministrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel attrAvaliadores;
    private javax.swing.JButton bttnAcompProjeto;
    private javax.swing.JButton bttnAttrAvaliadores;
    private javax.swing.JButton bttnFinalProjeto;
    private javax.swing.JButton bttnVoltarProjetosAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel projetosAdminContentPanel;
    private javax.swing.JPanel projetosAdminIndex;
    private javax.swing.JPanel projetosAdminMenuPanel;
    private javax.swing.JTable tabelaProjetosAdmin;
    // End of variables declaration//GEN-END:variables
}
